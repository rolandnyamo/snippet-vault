name: Package to GitHub Packages

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  package-artifacts:
    name: Package Artifacts
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@rolandnyamo'

      - name: Get version from tag
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          fi

      - name: Update package.json for GitHub Packages
        run: |
          node -e "
            const pkg = require('./package.json');
            pkg.name = '@rolandnyamo/snippet-vault';
            pkg.version = '${{ steps.version.outputs.version }}';
            pkg.publishConfig = {
              registry: 'https://npm.pkg.github.com',
              access: 'public'
            };
            pkg.files = ['dist/**/*', 'out/**/*', 'README.md', 'LICENSE'];
            require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));
          "

      - name: Install dependencies
        run: npm ci

      - name: Download models
        run: npm run download-models

      - name: Build application
        run: npm run build

      - name: Create distribution package
        run: |
          mkdir -p dist-package
          cp -r dist/* dist-package/ 2>/dev/null || true
          cp README.md dist-package/
          cp package.json dist-package/
          echo "# Snippet Vault Distribution Package" > dist-package/PACKAGE_README.md
          echo "" >> dist-package/PACKAGE_README.md
          echo "This package contains the built distribution files for Snippet Vault." >> dist-package/PACKAGE_README.md
          echo "To use these files, you'll need to run them with Electron." >> dist-package/PACKAGE_README.md
          echo "" >> dist-package/PACKAGE_README.md
          echo "For end-users, please download the appropriate installer from:" >> dist-package/PACKAGE_README.md
          echo "https://github.com/rolandnyamo/snippet-vault/releases" >> dist-package/PACKAGE_README.md

      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}

  publish-release-info:
    name: Create Release Info Package
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          fi

      - name: Create release info package
        run: |
          mkdir -p release-info
          cat > release-info/package.json << EOF
          {
            "name": "@rolandnyamo/snippet-vault-release",
            "version": "${{ steps.version.outputs.version }}",
            "description": "Release information and download links for Snippet Vault",
            "keywords": ["snippet-vault", "release", "electron", "download"],
            "homepage": "https://github.com/rolandnyamo/snippet-vault",
            "repository": {
              "type": "git",
              "url": "https://github.com/rolandnyamo/snippet-vault.git"
            },
            "publishConfig": {
              "registry": "https://npm.pkg.github.com",
              "access": "public"
            }
          }
          EOF
          
          cat > release-info/README.md << EOF
          # Snippet Vault Release v${{ steps.version.outputs.version }}
          
          ## Download Links
          
          **macOS (Universal - Intel & Apple Silicon)**
          - [Download snippet-vault-macos-universal.zip](https://github.com/rolandnyamo/snippet-vault/releases/download/v${{ steps.version.outputs.version }}/snippet-vault-macos-universal.zip)
          
          **Windows (x64)**
          - [Download snippet-vault-windows-x64-setup.exe](https://github.com/rolandnyamo/snippet-vault/releases/download/v${{ steps.version.outputs.version }}/snippet-vault-windows-x64-setup.exe)
          
          **Linux (x64)**
          - [Download snippet-vault-linux-x64.deb](https://github.com/rolandnyamo/snippet-vault/releases/download/v${{ steps.version.outputs.version }}/snippet-vault-linux-x64.deb)
          
          ## Installation Instructions
          
          ### macOS
          1. Download the .zip file
          2. Extract and move Snippet Vault.app to your Applications folder
          3. Right-click and select "Open" on first launch (unsigned app warning)
          
          ### Windows
          1. Download the .exe installer
          2. Run the installer
          3. You may need to click "More info" → "Run anyway" (unsigned app warning)
          
          ### Linux
          1. Download the .deb package
          2. Install with: \`sudo dpkg -i snippet-vault-linux-x64.deb\`
          3. Run from applications menu or terminal: \`snippet-vault\`
          
          ## Features
          - 🔍 Intelligent semantic search using TensorFlow.js
          - 🔒 100% offline operation - no data leaves your machine
          - 📁 Organized storage with Recent and All views
          - 🗑️ Complete item management (add, edit, delete)
          - 📤 Export/import functionality for backup
          - 🔄 Automatic model versioning and migration
          
          All releases are available at: https://github.com/rolandnyamo/snippet-vault/releases
          EOF
          
          cat > release-info/downloads.json << EOF
          {
            "version": "v${{ steps.version.outputs.version }}",
            "release_date": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "downloads": {
              "macos": {
                "universal": "https://github.com/rolandnyamo/snippet-vault/releases/download/v${{ steps.version.outputs.version }}/snippet-vault-macos-universal.zip",
                "architecture": "universal",
                "supported_versions": ["10.15+"]
              },
              "windows": {
                "x64": "https://github.com/rolandnyamo/snippet-vault/releases/download/v${{ steps.version.outputs.version }}/snippet-vault-windows-x64-setup.exe",
                "architecture": "x64",
                "supported_versions": ["Windows 10+"]
              },
              "linux": {
                "x64": "https://github.com/rolandnyamo/snippet-vault/releases/download/v${{ steps.version.outputs.version }}/snippet-vault-linux-x64.deb",
                "architecture": "x64",
                "package_type": "deb",
                "supported_distributions": ["Ubuntu 18.04+", "Debian 10+"]
              }
            }
          }
          EOF

      - name: Setup Node.js for GitHub Packages
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@rolandnyamo'

      - name: Publish release info to GitHub Packages
        run: |
          cd release-info
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
